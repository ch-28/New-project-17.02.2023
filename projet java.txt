import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class Predictor {
    private List<Instance> instances;
    private String filePath;

    public Predictor(String filePath) {
        this.filePath = filePath;
        this.instances = new ArrayList<Instance>();
        readFromFile();
    }

    public void add(Instance instance) {
        instances.add(instance);
    }

    public String getActivity(String outlook, double temperature, double humidity, String windy) {
        for (Instance instance : instances) {
            if (instance.getOutlook().equals(outlook) && instance.getTemperature() == temperature &&
                    instance.getHumidity() == humidity && instance.getWindy().equals(windy)) {
                return instance.getPlay();
            }
        }
        return "none";
    }

    public void writeToFile() {
        try {
            FileWriter writer = new FileWriter(filePath);
            writer.write("@relation weather\n\n");
            writer.write("@attribute outlook {sunny, overcast, rainy}\n");
            writer.write("@attribute temperature real\n");
            writer.write("@attribute humidity real\n");
            writer.write("@attribute windy {TRUE, FALSE}\n");
            writer.write("@attribute play {tennis, none, swimming}\n\n");
            writer.write("@data\n");
            for (Instance instance : instances) {
                writer.write(instance.toString() + "\n");
            }
            writer.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void readFromFile() {
        try {
            BufferedReader reader = new BufferedReader(new FileReader(filePath));
            String line;
            while ((line = reader.readLine()) != null) {
                if (line.startsWith("@data")) {
                    while ((line = reader.readLine()) != null) {
                        instances.add(new Instance(line));
                    }
                }
            }
            reader.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}

class Instance {
    private String outlook;
    private double temperature;
    private double humidity;
    private String windy;
    private String play;

    public Instance(String outlook, double temperature, double humidity, String windy, String play) {
        this.outlook = outlook;
        this.temperature = temperature;
        this.humidity = humidity;
        this.windy = windy;
        this.play = play;
    }

    public Instance(String instanceString) {
        String[] parts = instanceString.split(",");
        this.outlook = parts[0];
        this.temperature = Double.parseDouble(parts[1]);
        this.humidity = Double.parseDouble(parts[2]);
        this.windy = parts[3];
        this.play = parts[4];
    }

    public String getOutlook() {
        return outlook;
    }

    public double getTemperature() {
        return temperature;
    }

    public double getHumidity() {
        return humidity;
    }

    public String getWindy() {
        return windy;
    }

    public String getPlay() {
        return play;
    }

    public void setOutlook(String outlook) {
        this.outlook = outlook;
    }

    public void setTemperature(double temperature) {
        this.temperature = temperature;
    }

    public void setHumidity(double humidity) {
        this.humidity = humidity;
    }

    public void setWindy(String windy) {
        this.windy = windy;
    }

    public void setPlay(String play) {
        this.play = play;
    }

    @Override
    public String toString() {
        return outlook + "," + temperature + "," + humidity + "," + windy + "," + play;
    }
}
